(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2619],{1592:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/main/programing/activity/next-navigation/nextlib",function(){return r(2486)}])},2486:function(e,n,r){"use strict";r.r(n),r.d(n,{__toc:function(){return d}});var i=r(5893),s=r(2673),l=r(2643),c=r(9013);let d=[{depth:2,value:"Classes",id:"classes"},{depth:3,value:"InvalidGroupError",id:"invalidgrouperror"},{depth:3,value:"InvalidExerciseError",id:"invalidexerciseerror"},{depth:2,value:"Fonctions",id:"fonctions"},{depth:3,value:"playExercise(exerciseId: str) -> None",id:"playexerciseexerciseid-str---none"},{depth:3,value:"stopActivity() -> None",id:"stopactivity---none"},{depth:3,value:"getExerciseId(groupNb: int = 0, exerciseNb: int = 0) -> str",id:"getexerciseidgroupnb-int--0-exercisenb-int--0---str"},{depth:3,value:"getExerciseAttempts(exerciseId: str) -> int",id:"getexerciseattemptsexerciseid-str---int"},{depth:3,value:"getGroupsCount() -> int",id:"getgroupscount---int"},{depth:3,value:"getGroupExercisesCount(groupNb: int) -> int",id:"getgroupexercisescountgroupnb-int---int"},{depth:3,value:"getLastPlayedExerciseId() -> Optional[str]",id:"getlastplayedexerciseid---optionalstr"},{depth:3,value:"isAllExercisesPlayed() -> bool",id:"isallexercisesplayed---bool"},{depth:3,value:"getRandomGroupNb() -> int",id:"getrandomgroupnb---int"},{depth:3,value:"getRandomGroupExerciseNb(groupNb: int) -> int",id:"getrandomgroupexercisenbgroupnb-int---int"},{depth:3,value:"getRandomExercise() -> str",id:"getrandomexercise---str"},{depth:3,value:"getRandomExerciseFromGroup(groupNb: int) -> str",id:"getrandomexercisefromgroupgroupnb-int---str"},{depth:3,value:"getRandomUnplayedExerciseId() -> Optional[str]",id:"getrandomunplayedexerciseid---optionalstr"},{depth:3,value:"playCurrentIfUnplayed() -> None",id:"playcurrentifunplayed---none"},{depth:3,value:"getExerciseGrades(exerciseId: str) -> Iterable[int]",id:"getexercisegradesexerciseid-str---iterableint"},{depth:3,value:"getExerciseLastGrade(exerciseId: str) -> Optional[int]",id:"getexerciselastgradeexerciseid-str---optionalint"},{depth:3,value:"getExerciseBestGrade(exerciseId: str) -> Optional[int]",id:"getexercisebestgradeexerciseid-str---optionalint"},{depth:3,value:"getCurrentGrade() -> Optional[int]",id:"getcurrentgrade---optionalint"},{depth:3,value:"isPlayed(exerciseId: str) -> bool",id:"isplayedexerciseid-str---bool"},{depth:3,value:"playAnyFromGroup(groupNb: int) -> Optional[None]",id:"playanyfromgroupgroupnb-int---optionalnone"},{depth:3,value:"playAllFromGroup(groupNb: int, randomOrder: bool = False) -> Optional[None]",id:"playallfromgroupgroupnb-int-randomorder-bool--false---optionalnone"},{depth:3,value:"playFirstUnplayedExercise() -> None",id:"playfirstunplayedexercise---none"},{depth:3,value:"playNextUnplayedExercise(loop: bool = False) -> None",id:"playnextunplayedexerciseloop-bool--false---none"},{depth:3,value:"getCurrentGroupNumber() -> Optional[int]",id:"getcurrentgroupnumber---optionalint"},{depth:3,value:"isAllExercisesFromGroupPlayed(groupNb: int = getCurrentGroupNumber()) -> bool",id:"isallexercisesfromgroupplayedgroupnb-int--getcurrentgroupnumber---bool"},{depth:3,value:"setActivityGrade(grade_aggregation_strategy: Callable[[], int]) -> None",id:"setactivitygradegrade_aggregation_strategy-callable-int---none"},{depth:2,value:"Strat\xe9gies d'agr\xe9gation de notes",id:"strat\xe9gies-dagr\xe9gation-de-notes"},{depth:3,value:"average_grade_strategy() -> int",id:"average_grade_strategy---int"},{depth:3,value:"best_grade_strategy() -> int",id:"best_grade_strategy---int"}];function t(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",code:"code",hr:"hr",strong:"strong",ul:"ul",li:"li",em:"em"},(0,l.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"API de la librairie NextLib"}),"\n",(0,i.jsx)(n.p,{children:"La librairie NextLib est une librairie python qui simplifie la cr\xe9ation d'activit\xe9s avec une navigation intelligente."}),"\n",(0,i.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsx)(n.h3,{id:"invalidgrouperror",children:(0,i.jsx)(n.code,{children:"InvalidGroupError"})}),"\n",(0,i.jsx)(n.p,{children:"Exception lev\xe9e lorsqu'un num\xe9ro de groupe invalide est demand\xe9."}),"\n",(0,i.jsx)(n.h3,{id:"invalidexerciseerror",children:(0,i.jsx)(n.code,{children:"InvalidExerciseError"})}),"\n",(0,i.jsx)(n.p,{children:"Exception lev\xe9e lorsqu'un num\xe9ro d'exercice invalide est demand\xe9."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fonctions",children:"Fonctions"}),"\n",(0,i.jsx)(n.h3,{id:"playexerciseexerciseid-str---none",children:(0,i.jsx)(n.code,{children:"playExercise(exerciseId: str) -> None"})}),"\n",(0,i.jsx)(n.p,{children:"D\xe9marre l'ex\xe9cution d'un exercice en fonction de son ID."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice \xe0 jouer."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"StopExec"}),": Lev\xe9e pour arr\xeater la prochaine computation."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"stopactivity---none",children:(0,i.jsx)(n.code,{children:"stopActivity() -> None"})}),"\n",(0,i.jsx)(n.p,{children:"Termine l'activit\xe9 en cours."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"StopExec"}),": Lev\xe9e pour arr\xeater la prochaine computation."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getexerciseidgroupnb-int--0-exercisenb-int--0---str",children:(0,i.jsx)(n.code,{children:"getExerciseId(groupNb: int = 0, exerciseNb: int = 0) -> str"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re l'ID de l'exercice \xe0 partir d'un groupe et d'un num\xe9ro d'exercice sp\xe9cifi\xe9s."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe (index). Par d\xe9faut, 0."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro de l'exercice (index) dans le groupe. Par d\xe9faut, 0."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice s\xe9lectionn\xe9."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe est invalide."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidExerciseError"}),": Si le num\xe9ro d'exercice est invalide."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getexerciseattemptsexerciseid-str---int",children:(0,i.jsx)(n.code,{children:"getExerciseAttempts(exerciseId: str) -> int"})}),"\n",(0,i.jsx)(n.p,{children:"Renvoie le nombre de tentatives effectu\xe9es pour un exercice donn\xe9 par son ID."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): Le nombre de tentatives pour l'exercice sp\xe9cifi\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getgroupscount---int",children:(0,i.jsx)(n.code,{children:"getGroupsCount() -> int"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re le nombre total de groupes d'exercices disponibles."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): Le nombre de groupes."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getgroupexercisescountgroupnb-int---int",children:(0,i.jsx)(n.code,{children:"getGroupExercisesCount(groupNb: int) -> int"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re le nombre d'exercices dans un groupe sp\xe9cifique."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe (index)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): Le nombre d'exercices dans le groupe sp\xe9cifi\xe9."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getlastplayedexerciseid---optionalstr",children:(0,i.jsx)(n.code,{children:"getLastPlayedExerciseId() -> Optional[str]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re l'ID du dernier exercice jou\xe9."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[str]"}),"): L'ID du dernier exercice jou\xe9, ou ",(0,i.jsx)(n.code,{children:"None"})," si aucun exercice n'a \xe9t\xe9 jou\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isallexercisesplayed---bool",children:(0,i.jsx)(n.code,{children:"isAllExercisesPlayed() -> bool"})}),"\n",(0,i.jsx)(n.p,{children:"V\xe9rifie si tous les exercices ont \xe9t\xe9 jou\xe9s au moins une fois."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"bool"}),"): ",(0,i.jsx)(n.code,{children:"True"})," si tous les exercices ont \xe9t\xe9 tent\xe9s, ",(0,i.jsx)(n.code,{children:"False"})," sinon."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrandomgroupnb---int",children:(0,i.jsx)(n.code,{children:"getRandomGroupNb() -> int"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne un num\xe9ro de groupe al\xe9atoire."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): Un num\xe9ro de groupe choisi al\xe9atoirement (index)."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrandomgroupexercisenbgroupnb-int---int",children:(0,i.jsx)(n.code,{children:"getRandomGroupExerciseNb(groupNb: int) -> int"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne un num\xe9ro d'exercice al\xe9atoire au sein d'un groupe sp\xe9cifi\xe9."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe (index)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): Un num\xe9ro d'exercice choisi al\xe9atoirement au sein du groupe sp\xe9cifi\xe9."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrandomexercise---str",children:(0,i.jsx)(n.code,{children:"getRandomExercise() -> str"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne un exercice al\xe9atoire dans un groupe choisi al\xe9atoirement."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice choisi al\xe9atoirement."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrandomexercisefromgroupgroupnb-int---str",children:(0,i.jsx)(n.code,{children:"getRandomExerciseFromGroup(groupNb: int) -> str"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne un exercice al\xe9atoire dans un groupe sp\xe9cifi\xe9."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe (index) dont on veut s\xe9lectionner un exercice al\xe9atoire."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice al\xe9atoire choisi dans le groupe."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getrandomunplayedexerciseid---optionalstr",children:(0,i.jsx)(n.code,{children:"getRandomUnplayedExerciseId() -> Optional[str]"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne un exercice al\xe9atoire qui n'a pas encore \xe9t\xe9 jou\xe9."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[str]"}),"): L'ID de l'exercice choisi al\xe9atoirement qui n'a pas \xe9t\xe9 jou\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"playcurrentifunplayed---none",children:(0,i.jsx)(n.code,{children:"playCurrentIfUnplayed() -> None"})}),"\n",(0,i.jsx)(n.p,{children:"Joue l'exercice actuel s'il n'a pas encore \xe9t\xe9 tent\xe9."}),"\n",(0,i.jsx)(n.p,{children:"Si l'exercice actuel a d\xe9j\xe0 \xe9t\xe9 tent\xe9, aucune action n'est effectu\xe9e."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getexercisegradesexerciseid-str---iterableint",children:(0,i.jsx)(n.code,{children:"getExerciseGrades(exerciseId: str) -> Iterable[int]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re toutes les notes attribu\xe9es \xe0 un exercice sp\xe9cifique."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice dont on souhaite obtenir les notes."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Iterable[int]"}),"): Une liste des notes attribu\xe9es \xe0 cet exercice."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getexerciselastgradeexerciseid-str---optionalint",children:(0,i.jsx)(n.code,{children:"getExerciseLastGrade(exerciseId: str) -> Optional[int]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re la derni\xe8re note attribu\xe9e \xe0 un exercice sp\xe9cifique."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice dont on souhaite obtenir la derni\xe8re note."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[int]"}),"): La derni\xe8re note attribu\xe9e \xe0 l'exercice, ou ",(0,i.jsx)(n.code,{children:"None"})," si l'exercice n'a pas encore \xe9t\xe9 not\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getexercisebestgradeexerciseid-str---optionalint",children:(0,i.jsx)(n.code,{children:"getExerciseBestGrade(exerciseId: str) -> Optional[int]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re la meilleure note attribu\xe9e \xe0 un exercice sp\xe9cifique."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice dont on souhaite obtenir la meilleure note."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[int]"}),"): La meilleure note attribu\xe9e \xe0 l'exercice, ou ",(0,i.jsx)(n.code,{children:"None"})," si l'exercice n'a pas encore \xe9t\xe9 not\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcurrentgrade---optionalint",children:(0,i.jsx)(n.code,{children:"getCurrentGrade() -> Optional[int]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re la note actuelle de l'exercice en cours dans la navigation."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[int]"}),"): La note de l'exercice actuellement jou\xe9, ou ",(0,i.jsx)(n.code,{children:"None"})," s'il n'y a pas de note."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isplayedexerciseid-str---bool",children:(0,i.jsx)(n.code,{children:"isPlayed(exerciseId: str) -> bool"})}),"\n",(0,i.jsx)(n.p,{children:"V\xe9rifie si un exercice a d\xe9j\xe0 \xe9t\xe9 jou\xe9 au moins une fois."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"exerciseId"})," (",(0,i.jsx)(n.em,{children:"str"}),"): L'ID de l'exercice \xe0 v\xe9rifier."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"bool"}),"): ",(0,i.jsx)(n.code,{children:"True"})," si l'exercice a \xe9t\xe9 jou\xe9 au moins une fois, ",(0,i.jsx)(n.code,{children:"False"})," sinon."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"playanyfromgroupgroupnb-int---optionalnone",children:(0,i.jsx)(n.code,{children:"playAnyFromGroup(groupNb: int) -> Optional[None]"})}),"\n",(0,i.jsx)(n.p,{children:"V\xe9rifie si au moins un exercice dans le groupe sp\xe9cifi\xe9 a d\xe9j\xe0 \xe9t\xe9 effectu\xe9.\nSi aucun exercice n'a \xe9t\xe9 jou\xe9, lance un exercice al\xe9atoire de ce groupe."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe dont on souhaite v\xe9rifier les exercices."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[None]"}),"): ",(0,i.jsx)(n.code,{children:"None"})," si un exercice a d\xe9j\xe0 \xe9t\xe9 jou\xe9 dans le groupe."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"playallfromgroupgroupnb-int-randomorder-bool--false---optionalnone",children:(0,i.jsx)(n.code,{children:"playAllFromGroup(groupNb: int, randomOrder: bool = False) -> Optional[None]"})}),"\n",(0,i.jsxs)(n.p,{children:["Lance un exercice non jou\xe9 du groupe sp\xe9cifi\xe9.\nSi ",(0,i.jsx)(n.code,{children:"randomOrder"})," est d\xe9fini \xe0 ",(0,i.jsx)(n.code,{children:"True"}),", s\xe9lectionne un exercice non jou\xe9 al\xe9atoirement.\nSi tous les exercices ont \xe9t\xe9 jou\xe9s, aucune action n'est effectu\xe9e."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe dont on souhaite lancer un exercice."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"randomOrder"})," (",(0,i.jsx)(n.em,{children:"bool"}),"): Si ",(0,i.jsx)(n.code,{children:"True"}),", un exercice non jou\xe9 sera choisi al\xe9atoirement."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[None]"}),"): ",(0,i.jsx)(n.code,{children:"None"})," si tous les exercices du groupe ont d\xe9j\xe0 \xe9t\xe9 jou\xe9s."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"playfirstunplayedexercise---none",children:(0,i.jsx)(n.code,{children:"playFirstUnplayedExercise() -> None"})}),"\n",(0,i.jsx)(n.p,{children:"S\xe9lectionne et joue le premier exercice non jou\xe9, en parcourant les groupes et exercices s\xe9quentiellement."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"None"}),"): Si tous les exercices ont \xe9t\xe9 jou\xe9s."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"playnextunplayedexerciseloop-bool--false---none",children:(0,i.jsx)(n.code,{children:"playNextUnplayedExercise(loop: bool = False) -> None"})}),"\n",(0,i.jsxs)(n.p,{children:["Joue le prochain exercice non jou\xe9 apr\xe8s l'exercice actuellement en cours.\nSi aucun exercice suivant n'est trouv\xe9, parcourt la liste depuis le d\xe9but si ",(0,i.jsx)(n.code,{children:"loop"})," est d\xe9fini \xe0 ",(0,i.jsx)(n.code,{children:"True"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"loop"})," (",(0,i.jsx)(n.em,{children:"bool"}),"): Si ",(0,i.jsx)(n.code,{children:"True"}),", recommence depuis le d\xe9but lorsque la fin est atteinte."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"StopExec"}),": Exception lev\xe9e pour d\xe9marrer le prochain exercice non jou\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"getcurrentgroupnumber---optionalint",children:(0,i.jsx)(n.code,{children:"getCurrentGroupNumber() -> Optional[int]"})}),"\n",(0,i.jsx)(n.p,{children:"R\xe9cup\xe8re le num\xe9ro du groupe de l'exercice actuellement en cours."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"Optional[int]"}),"): Le num\xe9ro du groupe de l'exercice en cours, ou ",(0,i.jsx)(n.code,{children:"None"})," si aucun exercice n'est en cours."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isallexercisesfromgroupplayedgroupnb-int--getcurrentgroupnumber---bool",children:(0,i.jsx)(n.code,{children:"isAllExercisesFromGroupPlayed(groupNb: int = getCurrentGroupNumber()) -> bool"})}),"\n",(0,i.jsx)(n.p,{children:"V\xe9rifie si tous les exercices d'un groupe sp\xe9cifique ont \xe9t\xe9 jou\xe9s."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"groupNb"})," (",(0,i.jsx)(n.em,{children:"int"}),"): Le num\xe9ro du groupe \xe0 v\xe9rifier (par d\xe9faut : le groupe actuel)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"bool"}),"): ",(0,i.jsx)(n.code,{children:"True"})," si tous les exercices du groupe ont \xe9t\xe9 jou\xe9s, ",(0,i.jsx)(n.code,{children:"False"})," sinon."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"InvalidGroupError"}),": Si le num\xe9ro de groupe sp\xe9cifi\xe9 n'existe pas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"setactivitygradegrade_aggregation_strategy-callable-int---none",children:(0,i.jsx)(n.code,{children:"setActivityGrade(grade_aggregation_strategy: Callable[[], int]) -> None"})}),"\n",(0,i.jsx)(n.p,{children:"Calcule et stocke la note totale de l'activit\xe9 en utilisant une strat\xe9gie d'agr\xe9gation sp\xe9cifi\xe9e."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"grade_aggregation_strategy"})," (",(0,i.jsx)(n.em,{children:"Callable[[], int]"}),"): Une fonction qui retourne une note agr\xe9g\xe9e."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Exceptions"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ValueError"}),": Si la note totale calcul\xe9e est invalide (hors de l'intervalle 0-100)."]}),"\n"]}),"\n",(0,i.jsx)(c.UW,{type:"info",children:"La note totale de l'activit\xe9 est calcul\xe9e en utilisant la strat\xe9gie d'agr\xe9gation sp\xe9cifi\xe9e. Voir section suivante."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"strat\xe9gies-dagr\xe9gation-de-notes",children:"Strat\xe9gies d'agr\xe9gation de notes"}),"\n",(0,i.jsx)(n.h3,{id:"average_grade_strategy---int",children:(0,i.jsx)(n.code,{children:"average_grade_strategy() -> int"})}),"\n",(0,i.jsx)(n.p,{children:"Retourne la moyenne des notes des exercices jou\xe9s."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): La moyenne des notes, ou ",(0,i.jsx)(n.code,{children:"0"})," si aucune note n'est disponible."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"best_grade_strategy---int",children:(0,i.jsx)(n.code,{children:"best_grade_strategy() -> int"})}),"\n",(0,i.jsx)(n.p,{children:"Retourne la meilleure note obtenue parmi les exercices jou\xe9s."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Retourne"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["(",(0,i.jsx)(n.em,{children:"int"}),"): La meilleure note, ou ",(0,i.jsx)(n.code,{children:"0"})," si aucune note n'est disponible."]}),"\n"]})]})}n.default=(0,s.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.a)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)},pageOpts:{filePath:"pages/main/programing/activity/next-navigation/nextlib.mdx",route:"/main/programing/activity/next-navigation/nextlib",frontMatter:{title:"API NextLib"},timestamp:1740846203e3,title:"API NextLib",headings:d},pageNextRoute:"/main/programing/activity/next-navigation/nextlib"})}},function(e){e.O(0,[2673,9774,2888,179],function(){return e(e.s=1592)}),_N_E=e.O()}]);